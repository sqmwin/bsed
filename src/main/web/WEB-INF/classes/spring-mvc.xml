<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--注册注解识别-->
    <context:annotation-config/>
    <context:component-scan base-package="cn.bsed.controller">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--注册springmvc注解驱动-->
    <mvc:annotation-driven>
        <!--注册fastjson消息转换器-->
        <mvc:message-converters>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"
                  p:fastJsonConfig-ref="fastJsonConfig"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--fastjson配置-->
    <bean class="com.alibaba.fastjson.support.config.FastJsonConfig" id="fastJsonConfig"/>

    <!--静态资源访问默认servlet-->
    <mvc:default-servlet-handler/>

    <!--定位视图解析器地址-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
          p:defaultEncoding="UTF-8"/>

    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
    <!--<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error/errorFileUpload.jsp页面 -->
                <!--<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error/errorFileUpload</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <!--权限拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/admin/*"/>
            <bean class="cn.bsed.interceptor.PermissionInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--异常解析器-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
        <!--<property name="exceptionMappings">-->
            <!--<props>-->
                <!--<prop key="cn.bsed.exception.WrongInputException">/error/wrongInputException</prop>-->
                <!--<prop key="cn.bsed.exception.CorrectInputException">/error/correctInputException</prop>-->
            <!--</props>-->
        <!--</property>-->
        <!--<property name="defaultErrorView" value="/error/defaultError"/>-->
        <!--<property name="exceptionAttribute" value="ex"/>-->
    <!--</bean>-->

    <!--自定义的异常解析器-->
    <!--<bean class="cn.bsed.handler.MyExceptionResolver"/>-->

    <!--自定的类型转换器-->
    <bean class="cn.bsed.converter.MyDateConverter" id="dateConverter"/>

    <!--注册类型转换服务Bean-->
    <bean class="org.springframework.context.support.ConversionServiceFactoryBean" id="conversionService">
        <property name="converters">
            <set>
                <ref bean="dateConverter"/>
            </set>
        </property>
    </bean>

    <!--注册MVC注解驱动-->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!--注册验证器-->
    <!--验证器由LocalValidatorFactoryBean生成-->
    <!--而真正提供验证器的是providerClass：HibernateValidator-->
    <!--<mvc:annotation-driven validator="validator"/>-->
    <!--<bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" id="validator">-->
        <!--<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>-->
    <!--</bean>-->
</beans>